name: CI1

on:
  workflow_run:
    workflows: ['Release1 Workflow']
    types: [completed]

jobs:
  build:
    name: '‚úèÔ∏è Changelog generation'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check release success?'
        if: ${{ github.event.workflow_run.conclusion == 'failure' }}
        run: exit 1
      - name: 'üì• Check-out'
        uses: actions/checkout@v2
        with:
          ref: 'main'
          
      - name: Release Changelog Builder
        uses: mikepenz/release-changelog-builder-action@v3

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configurationJson: |
            {
                  "categories": [
                  {
                    "title": "## üöÄ Features",
                    "labels": ["feature"]
                  },
                  {
                    "title": "## üêõ Fixes",
                    "labels": ["fix"]
                  },
                  {
                    "title": "## üß™ Tests",
                    "labels": ["test"]
                  },
                  {
                    "title": "## üß™ Tests and some ü™Ñ Magic",
                    "labels": ["test", "magic"],
                    "exclude_labels": ["no-magic"],
                    "exhaustive": true,
                    "empty_content": "- no matching PRs"
                  }
                ],
                "ignore_labels": [
                  "ignore"
                ],
                "sort": {
                  "order": "ASC",
                  "on_property": "mergedAt"
                },
                "template": "${{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n${{UNCATEGORIZED}}\n</details>",
                "pr_template": "- ${{TITLE}}\n   - PR: #${{NUMBER}}",
                "empty_template": "- no changes",
                "label_extractor": [
                  {
                    "pattern": "(.) (.+)",
                    "target": "$1",
                    "flags": "gu"
                  },
                  {
                    "pattern": "\\[Issue\\]",
                    "on_property": "title",
                    "method": "match"
                  }
                ],
                "duplicate_filter": {
                  "pattern": "\\[ABC-....\\]",
                  "on_property": "title",
                  "method": "match"
                },
                "transformers": [
                  {
                    "pattern": "[\\-\\*] (\\[(...|TEST|CI|SKIP)\\])( )?(.+?)\n(.+?[\\-\\*] )(.+)",
                    "target": "- $4\n  - $6"
                  }
                ],
                "max_tags_to_fetch": 200,
                "max_pull_requests": 200,
                "max_back_track_time_days": 365,
                "exclude_merge_branches": [
                  "Owner/qa"
                ],
                "tag_resolver": {
                  "method": "semver",
                  "filter": {
                    "pattern": "api-(.+)",
                    "flags": "gu"
                  }
                },
                "base_branches": [
                  "dev"
                ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 'üöÄ Create GitHub release'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.MVN_VERSION }}
          release_name: P0SR9-${{ env.GIT_HASH }}
          body: ${{steps.github_release.outputs.changelog}}
          
      - name: Deploy to Github Package Registry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p ~/.m2
          echo "<settings><servers><server><id>gh</id><username>$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $1}')</username><password>\${env.GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
          REPO="gh::default::https://maven.pkg.github.com/${GITHUB_REPOSITORY}"
          mvn deploy -DaltDeploymentRepository="${REPO}" -DaltSnapshotDeploymentRepository="${REPO}" -DaltSnapshotDeploymentRepository="${REPO}" --file pom.xml

#       - name: "‚úèÔ∏è Generate full changelog"
#         id: generate-full-changelog
#         uses: ./
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           headerLabel: "# üìë Changelog"
#           breakingLabel: '### üí• Breaking'
#           enhancementLabel: '### üöÄ Enhancements'
#           bugsLabel: '### üêõ Bug fixes'
#           deprecatedLabel: '### ‚ö†Ô∏è Deprecations'
#           removedLabel: '### üî• Removals'
#           securityLabel: '### üõ°Ô∏è Security'
#           issuesLabel: '### üìÅ Other issues'
#           prLabel: '### üìÅ Other pull requests'
#           addSections: '{"documentation":{"prefix":"### üìñ Documentation","labels":["documentation"]},"tests":{"prefix":"### ‚úÖ Testing","labels":["tests"]}}'
#           issues: true
#           issuesWoLabels: true
#           pullRequests: true
#           prWoLabels: true
#           author: true
#           unreleased: true
#           compareLink: true
#           stripGeneratorNotice: true
#           verbose: true
#       - name: "üñ®Ô∏è Print changelog to console"
#         run: cat CHANGELOG.md
#       - name: "üì§ Upload changelog"
#         uses: actions/upload-artifact@v1.0.0
#         with:
#           name: "Changelog"
#           path: CHANGELOG.md
